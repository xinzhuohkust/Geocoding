}
}
if (is.null(ax)) {
stop(paste("error lat:", lat))
}
e <- ax[1] + ax[2] * abs(lon)
i <- abs(lat) / ax[10]
aw <- ax[3] + ax[4] * i + ax[5] * i * i + ax[6] * i * i * i +
ax[7] * i * i * i * i + ax[8] * i * i * i * i * i + ax[9] * i * i * i * i * i * i
if (lon < 0) {
e <- e * -1
}
if (lat < 0) {
aw <- aw * -1
}
return(c(e, aw))
}
convert_MCT(mct$x, mct$y)
MCBAND <- c(12890594.86, 8362377.87, 5591021, 3481989.83, 1678043.12, 0)
MC2LL <- list(c(1.410526172116255e-8, 0.00000898305509648872, -1.9939833816331,
200.9824383106796, -187.2403703815547, 91.6087516669843, -23.38765649603339,
2.57121317296198, -0.03801003308653, 17337981.2),
c(-7.435856389565537e-9, 0.000008983055097726239, -0.78625201886289,
96.32687599759846, -1.85204757529826, -59.36935905485877, 47.40033549296737,
-16.50741931063887, 2.28786674699375, 10260144.86),
c(-3.030883460898826e-8, 0.00000898305509983578, 0.30071316287616,
59.74293618442277, 7.357984074871, -25.38371002664745, 13.45380521110908,
-3.29883767235584, 0.32710905363475, 6856817.37),
c(-1.981981304930552e-8, 0.000008983055099779535, 0.03278182852591, 40.31678527705744,
0.65659298677277, -4.44255534477492, 0.85341911805263, 0.12923347998204,
-0.04625736007561, 4482777.06),
c(3.09191371068437e-9, 0.000008983055096812155, 0.00006995724062, 23.10934304144901,
-0.00023663490511, -0.6321817810242, -0.00663494467273, 0.03430082397953,
-0.00466043876332, 2555164.4),
c(2.890871144776878e-9, 0.000008983055095805407, -3.068298e-8, 7.47137025468032,
-0.00000353937994, -0.02145144861037, -0.00001234426596, 0.00010322952773,
-0.00000323890364, 826088.5))
X_PI <- 3.14159265358979324 * 3000.0 / 180.0
library(Rmpfr)
convert_MCT <- function(lon, lat) {
ax <- NULL
for (j in 1:length(MCBAND)) {
if (lat >= MCBAND[j]) {
ax <- MC2LL[[j]]
break
}
}
if (is.null(ax)) {
stop(paste("error lat:", lat))
}
e <- ax[1] + ax[2] * abs(lon)
i <- abs(lat) / ax[10]
aw <- ax[3] + ax[4] * i + ax[5] * i * i + ax[6] * i * i * i +
ax[7] * i * i * i * i + ax[8] * i * i * i * i * i + ax[9] * i * i * i * i * i * i
if (lon < 0) {
e <- e * -1
}
if (lat < 0) {
aw <- aw * -1
}
return(c(e, aw))
}
convert_MCT(mct$x, mct$y)
mct$x
mct$y
convert_MCT <- function(lon, lat) {
lon <- as.numeric(lon)
lat <- as.numeric(lat)
ax <- NULL
for (j in 1:length(MCBAND)) {
if (lat >= MCBAND[j]) {
ax <- MC2LL[[j]]
break
}
}
if (is.null(ax)) {
stop(paste("error lat:", lat))
}
e <- ax[1] + ax[2] * abs(lon)
i <- abs(lat) / ax[10]
aw <- ax[3] + ax[4] * i + ax[5] * i * i + ax[6] * i * i * i +
ax[7] * i * i * i * i + ax[8] * i * i * i * i * i + ax[9] * i * i * i * i * i * i
if (lon < 0) {
e <- e * -1
}
if (lat < 0) {
aw <- aw * -1
}
return(c(e, aw))
}
convert_MCT(mct$x, mct$y)
convert_MCT <- function(lon, lat) {
lon <- as.numeric(lon)
lat <- as.numeric(lat)
ax <- NULL
for (j in 1:length(MCBAND)) {
if (lat >= MCBAND[j]) {
ax <- MC2LL[[j]]
break
}
}
if (is.null(ax)) {
stop(paste("error lat:", lat))
}
e <- ax[1] + ax[2] * abs(lon)
i <- abs(lat) / ax[10]
aw <- ax[3] + ax[4] * i + ax[5] * i * i + ax[6] * i * i * i +
ax[7] * i * i * i * i + ax[8] * i * i * i * i * i + ax[9] * i * i * i * i * i * i
if (lon < 0) {
e <- e * -1
}
if (lat < 0) {
aw <- aw * -1
}
return(c(e, aw))
}
convert_MCT(mct$x, mct$y)
mct
get_MCT <- function(location, sleep = 0) {
query <- stringr::str_c("https://api.map.baidu.com/?qt=gc&wd=", location, "&cn=", location, "&ie=utf-8&oue=1&fromproduct=jsapi&v=2.1&res=api&callback=BMap._rd._cbk76808&ak=B13d386658b7f5e9c2e2294e0314afbe&seckey=QTgtP7i3IFIyZS1fxcUv7U5hN7iMgBxQuNrCL19CFFY=,0lDw2kcJe7ZlfwPRhV62rzEQvNGchN91dYNjXCXYYHr8D9Ov-kz8cj2Uvh62V7VN8bJD_0kBb_dj2DSDW9z_daRg6vUqbBY7eS7sqz2vF_b1Hch_kZqlZ2hHvTzFoC6j2E-I5FhfQ3LTDmAZ05m1UHLa2zej3-vb67l2SEyeNwaMcF6qG3BFLKRxbp1oIV6dFMZL16bDlcbEPMYpqolIng&timeStamp=1683473883023&sign=a7c3f422cf06")
MCT <- query |>
httr2::request() |>
httr2::req_timeout(5) |>
httr2::req_retry(
max_tries = 3,
backoff = ~ 5
) |>
httr2::req_perform() |>
purrr::pluck("body") |>
rvest::read_html() |>
rvest::html_text() |>
stringr::str_extract("(?<=\\d\\().+?(?=\\)$)") |>
jsonlite::fromJSON() |>
purrr::pluck("content", "coord")
Sys.sleep(sleep)
return(MCT)
}
get_MCT("国家信访局"， 1)
get_MCT("国家信访局", 1)
get_MCT("国家信访局", 5)
get_admin_info(12953009.27, 4826521.39)
get_admin_info <- \(x, y, sleep = 0) {
location <- stringr::str_c("https://api.map.baidu.com/?qt=rgc&x=", x, "&y=", y, "&dis_poi=100&poi_num=10&latest_admin=1&ie=utf-8&oue=1&fromproduct=jsapi&v=2.1&res=api&callback=BMap._rd._cbk1899&ak=B13d386658b7f5e9c2e2294e0314afbe&seckey=QTgtP7i3IFIyZS1fxcUv7XKwbgK6bqfjAF1bCrqBO20=,0lDw2kcJe7ZlfwPRhV62rwcKzrobqQ7fSyBuUwLq90_0q4g0ZiVMFwng1Clb5yrsPi3gmIjul0Pv5P1JrFKgprNjbBQR0LO-d0wpWW3lDIDx6R8lc9cvB82A_SwsAYToaouwvIzgVHfyytdk7_-lVoNLsAlB97ic29Nu-yNu3ac0RRbClYr4xIBX26-3gH-7UmxiYhe9qXFAVMEhlolRTBpIZbdrertc2CBF7YE5h-4&timeStamp=1683459630021&sign=7ad6dc466104") |>
httr2::request() |>
httr2::req_timeout(5) |>
httr2::req_retry(
max_tries = 3,
backoff = ~ 5
) |>
httr2::req_perform() |>
purrr::pluck("body") |>
rvest::read_html() |>
rvest::html_text() |>
stringr::str_extract("(?<=\\d\\().+?(?=\\)$)") |>
jsonlite::fromJSON() |>
purrr::pluck("content")
Sys.sleep(sleep)
return(location)
}
get_admin_info(12953009.27, 4826521.39)
location
location <- get_admin_info(12953009.27, 4826521.39)
location
pluck(location, "address_detail", "district")
purrr::pluck(location, "address_detail", "district")
purrr::pluck(location, "address_detail", "city")
purrr::pluck(location, "address_detail", "province")
tibble(
district = purrr::pluck(location, "address_detail", "district"),
city = purrr::pluck(location, "address_detail", "city"),
province = purrr::pluck(location, "address_detail", "province")
)
tibble::tibble(
district = purrr::pluck(location, "address_detail", "district"),
city = purrr::pluck(location, "address_detail", "city"),
province = purrr::pluck(location, "address_detail", "province")
)
list(
district = purrr::pluck(location, "address_detail", "district"),
city = purrr::pluck(location, "address_detail", "city"),
province = purrr::pluck(location, "address_detail", "province")
)
list(
district = purrr::pluck(location, "address_detail", "district"),
city = purrr::pluck(location, "address_detail", "city"),
province = purrr::pluck(location, "address_detail", "province")
) %>%
tibble()
list(
district = purrr::pluck(location, "address_detail", "district"),
city = purrr::pluck(location, "address_detail", "city"),
province = purrr::pluck(location, "address_detail", "province")
) |>
tibble()
list(
district = purrr::pluck(location, "address_detail", "district"),
city = purrr::pluck(location, "address_detail", "city"),
province = purrr::pluck(location, "address_detail", "province")
) |>
tibble::tibble()
list(
district = purrr::pluck(location, "address_detail", "district"),
city = purrr::pluck(location, "address_detail", "city"),
province = purrr::pluck(location, "address_detail", "province")
) |>
tibble::as_tibble()
get_admin_info <- \(x, y, sleep = 0, full = FALSE) {
info <- stringr::str_c("https://api.map.baidu.com/?qt=rgc&x=", x, "&y=", y, "&dis_poi=100&poi_num=10&latest_admin=1&ie=utf-8&oue=1&fromproduct=jsapi&v=2.1&res=api&callback=BMap._rd._cbk1899&ak=B13d386658b7f5e9c2e2294e0314afbe&seckey=QTgtP7i3IFIyZS1fxcUv7XKwbgK6bqfjAF1bCrqBO20=,0lDw2kcJe7ZlfwPRhV62rwcKzrobqQ7fSyBuUwLq90_0q4g0ZiVMFwng1Clb5yrsPi3gmIjul0Pv5P1JrFKgprNjbBQR0LO-d0wpWW3lDIDx6R8lc9cvB82A_SwsAYToaouwvIzgVHfyytdk7_-lVoNLsAlB97ic29Nu-yNu3ac0RRbClYr4xIBX26-3gH-7UmxiYhe9qXFAVMEhlolRTBpIZbdrertc2CBF7YE5h-4&timeStamp=1683459630021&sign=7ad6dc466104") |>
httr2::request() |>
httr2::req_timeout(5) |>
httr2::req_retry(
max_tries = 3,
backoff = ~ 5
) |>
httr2::req_perform() |>
purrr::pluck("body") |>
rvest::read_html() |>
rvest::html_text() |>
stringr::str_extract("(?<=\\d\\().+?(?=\\)$)") |>
jsonlite::fromJSON() |>
purrr::pluck("content")
Sys.sleep(sleep)
if (full == TRUE) {
return(info)
} else {
info <- list(
district = purrr::pluck(location, "address_detail", "district"),
city = purrr::pluck(location, "address_detail", "city"),
province = purrr::pluck(location, "address_detail", "province")
)
return(info)
}
}
get_admin_info(12953009.27, 4826521.39)
get_admin_info(12953009.27, 4826521.39, full = TRUE)
??distm
get_MCT <- function(location, sleep = 0) {
query <- stringr::str_c("https://api.map.baidu.com/?qt=gc&wd=", location, "&cn=", location, "&ie=utf-8&oue=1&fromproduct=jsapi&v=2.1&res=api&callback=BMap._rd._cbk76808&ak=B13d386658b7f5e9c2e2294e0314afbe&seckey=QTgtP7i3IFIyZS1fxcUv7U5hN7iMgBxQuNrCL19CFFY=,0lDw2kcJe7ZlfwPRhV62rzEQvNGchN91dYNjXCXYYHr8D9Ov-kz8cj2Uvh62V7VN8bJD_0kBb_dj2DSDW9z_daRg6vUqbBY7eS7sqz2vF_b1Hch_kZqlZ2hHvTzFoC6j2E-I5FhfQ3LTDmAZ05m1UHLa2zej3-vb67l2SEyeNwaMcF6qG3BFLKRxbp1oIV6dFMZL16bDlcbEPMYpqolIng&timeStamp=1683473883023&sign=a7c3f422cf06")
MCT <- query |>
httr2::request() |>
httr2::req_timeout(5) |>
httr2::req_retry(
max_tries = 3,
backoff = ~ 5
) |>
httr2::req_perform() |>
purrr::pluck("body") |>
rvest::read_html() |>
rvest::html_text() |>
stringr::str_extract("(?<=\\d\\().+?(?=\\)$)") |>
jsonlite::fromJSON() |>
purrr::pluck("content", "coord")
Sys.sleep(sleep)
return(MCT)
}
get_MCT <- function(location, sleep = 0) {
query <- stringr::str_c("https://api.map.baidu.com/?qt=gc&wd=", location, "&cn=", location, "&ie=utf-8&oue=1&fromproduct=jsapi&v=2.1&res=api&callback=BMap._rd._cbk76808&ak=B13d386658b7f5e9c2e2294e0314afbe&seckey=QTgtP7i3IFIyZS1fxcUv7U5hN7iMgBxQuNrCL19CFFY=,0lDw2kcJe7ZlfwPRhV62rzEQvNGchN91dYNjXCXYYHr8D9Ov-kz8cj2Uvh62V7VN8bJD_0kBb_dj2DSDW9z_daRg6vUqbBY7eS7sqz2vF_b1Hch_kZqlZ2hHvTzFoC6j2E-I5FhfQ3LTDmAZ05m1UHLa2zej3-vb67l2SEyeNwaMcF6qG3BFLKRxbp1oIV6dFMZL16bDlcbEPMYpqolIng&timeStamp=1683473883023&sign=a7c3f422cf06")
MCT <- query |>
httr2::request() |>
httr2::req_timeout(5) |>
httr2::req_retry(
max_tries = 3,
backoff = ~ 5
) |>
httr2::req_perform() |>
purrr::pluck("body") |>
rvest::read_html() |>
rvest::html_text() |>
stringr::str_extract("(?<=\\d\\().+?(?=\\)$)") |>
jsonlite::fromJSON() |>
purrr::pluck("content", "coord")
Sys.sleep(sleep)
return(MCT)
}
get_MCT("天安门")
get_MCT <- function(location, sleep = 0) {
query <- stringr::str_c("https://api.map.baidu.com/?qt=gc&wd=", location, "&cn=", location, "&ie=utf-8&oue=1&fromproduct=jsapi&v=2.1&res=api&callback=BMap._rd._cbk76808&ak=B13d386658b7f5e9c2e2294e0314afbe&seckey=QTgtP7i3IFIyZS1fxcUv7U5hN7iMgBxQuNrCL19CFFY=,0lDw2kcJe7ZlfwPRhV62rzEQvNGchN91dYNjXCXYYHr8D9Ov-kz8cj2Uvh62V7VN8bJD_0kBb_dj2DSDW9z_daRg6vUqbBY7eS7sqz2vF_b1Hch_kZqlZ2hHvTzFoC6j2E-I5FhfQ3LTDmAZ05m1UHLa2zej3-vb67l2SEyeNwaMcF6qG3BFLKRxbp1oIV6dFMZL16bDlcbEPMYpqolIng&timeStamp=1683473883023&sign=a7c3f422cf06")
MCT <- query |>
httr2::request() |>
httr2::req_timeout(5) |>
httr2::req_retry(
max_tries = 3,
backoff = ~ 5
) |>
httr2::req_perform() |>
purrr::pluck("body") |>
rvest::read_html() |>
rvest::html_text() |>
stringr::str_extract("(?<=\\d\\().+?(?=\\)$)") |>
jsonlite::fromJSON() |>
purrr::pluck("content", "coord")
names(MCT) <- c("longitude", "latitude")
Sys.sleep(sleep)
return(MCT)
}
get_MCT("天安门")
get_MCT <- function(address, sleep = 0) {
query <- paste("https://api.map.baidu.com/?qt=gc&wd=", location, "&cn=", location, "&ie=utf-8&oue=1&fromproduct=jsapi&v=2.1&res=api&callback=BMap._rd._cbk76808&ak=B13d386658b7f5e9c2e2294e0314afbe&seckey=QTgtP7i3IFIyZS1fxcUv7U5hN7iMgBxQuNrCL19CFFY=,0lDw2kcJe7ZlfwPRhV62rzEQvNGchN91dYNjXCXYYHr8D9Ov-kz8cj2Uvh62V7VN8bJD_0kBb_dj2DSDW9z_daRg6vUqbBY7eS7sqz2vF_b1Hch_kZqlZ2hHvTzFoC6j2E-I5FhfQ3LTDmAZ05m1UHLa2zej3-vb67l2SEyeNwaMcF6qG3BFLKRxbp1oIV6dFMZL16bDlcbEPMYpqolIng&timeStamp=1683473883023&sign=a7c3f422cf06")
MCT <- query |>
httr2::request() |>
httr2::req_timeout(5) |>
httr2::req_retry(
max_tries = 3,
backoff = ~ 5
) |>
httr2::req_perform() |>
purrr::pluck("body") |>
rvest::read_html() |>
rvest::html_text() |>
stringr::str_extract("(?<=\\d\\().+?(?=\\)$)") |>
jsonlite::fromJSON() |>
purrr::pluck("content", "coord")
names(MCT) <- c("longitude", "latitude")
Sys.sleep(sleep)
return(MCT)
}
get_MCT("安徽")
get_MCT <- function(address, sleep = 0) {
query <- paste0("https://api.map.baidu.com/?qt=gc&wd=", address, "&cn=", address, "&ie=utf-8&oue=1&fromproduct=jsapi&v=2.1&res=api&callback=BMap._rd._cbk76808&ak=B13d386658b7f5e9c2e2294e0314afbe&seckey=QTgtP7i3IFIyZS1fxcUv7U5hN7iMgBxQuNrCL19CFFY=,0lDw2kcJe7ZlfwPRhV62rzEQvNGchN91dYNjXCXYYHr8D9Ov-kz8cj2Uvh62V7VN8bJD_0kBb_dj2DSDW9z_daRg6vUqbBY7eS7sqz2vF_b1Hch_kZqlZ2hHvTzFoC6j2E-I5FhfQ3LTDmAZ05m1UHLa2zej3-vb67l2SEyeNwaMcF6qG3BFLKRxbp1oIV6dFMZL16bDlcbEPMYpqolIng&timeStamp=1683473883023&sign=a7c3f422cf06")
MCT <- query |>
httr2::request() |>
httr2::req_timeout(5) |>
httr2::req_retry(
max_tries = 3,
backoff = ~ 5
) |>
httr2::req_perform() |>
purrr::pluck("body") |>
rvest::read_html() |>
rvest::html_text() |>
stringr::str_extract("(?<=\\d\\().+?(?=\\)$)") |>
jsonlite::fromJSON() |>
purrr::pluck("content", "coord")
names(MCT) <- c("longitude", "latitude")
Sys.sleep(sleep)
return(MCT)
}
get_MCT("安徽")
#| echo: false
#| message: false
require("pacman")
p_load(modelsummary, tidyverse, purrr, furrr, stringi, tokenizers, tidytext, progress, jsonlite, sf, leaflet, DT, hchinamap)
library(Geocoding)
remove.packages("Geocoding")
install.packages("E:/OneDrive - HKUST Connect/R packages/Geocoding_0.1.0.zip", repos = NULL, type = "win.binary")
install.packages("E:/OneDrive - HKUST Connect/R packages/Geocoding_0.1.0.zip", repos = NULL, type = "win.binary")
library(Geocoding)
remove.packages("Geocoding")
pacman::p_load_gh("xinzhuohkust/Geocoding")
pacman::p_load_gh("xinzhuohkust/Geocoding")
pacman::p_load_gh("xinzhuohkust/Geocoding")
pacman::p_load_gh("xinzhuohkust/Geocoding")
pacman::p_load_gh("xinzhuohkust/Geocoding")
mct <- get_MCT("国家信访局")
mct <- get_MCT("国家信访局")
get_MCT <- function(address, sleep = 0) {
query <- stringr::str_c("https://api.map.baidu.com/?qt=gc&wd=", address, "&cn=", address, "&ie=utf-8&oue=1&fromproduct=jsapi&v=2.1&res=api&callback=BMap._rd._cbk76808&ak=B13d386658b7f5e9c2e2294e0314afbe&seckey=QTgtP7i3IFIyZS1fxcUv7U5hN7iMgBxQuNrCL19CFFY=,0lDw2kcJe7ZlfwPRhV62rzEQvNGchN91dYNjXCXYYHr8D9Ov-kz8cj2Uvh62V7VN8bJD_0kBb_dj2DSDW9z_daRg6vUqbBY7eS7sqz2vF_b1Hch_kZqlZ2hHvTzFoC6j2E-I5FhfQ3LTDmAZ05m1UHLa2zej3-vb67l2SEyeNwaMcF6qG3BFLKRxbp1oIV6dFMZL16bDlcbEPMYpqolIng&timeStamp=1683473883023&sign=a7c3f422cf06")
MCT <- query |>
httr2::request() |>
httr2::req_timeout(5) |>
httr2::req_retry(
max_tries = 3,
backoff = ~ 5
) |>
httr2::req_perform() |>
purrr::pluck("body") |>
rvest::read_html() |>
rvest::html_text() |>
stringr::str_extract("(?<=\\d\\().+?(?=\\)$)") |>
jsonlite::fromJSON() |>
purrr::pluck("content", "coord")
Sys.sleep(sleep)
return(MCT)
}
mct <- get_MCT("国家信访局")
mct
mct <- get_MCT("国家信访局")
mct
convert_MCT()
MCBAND <- c(12890594.86, 8362377.87, 5591021, 3481989.83, 1678043.12, 0)
MC2LL <- list(c(1.410526172116255e-8, 0.00000898305509648872, -1.9939833816331,
200.9824383106796, -187.2403703815547, 91.6087516669843, -23.38765649603339,
2.57121317296198, -0.03801003308653, 17337981.2),
c(-7.435856389565537e-9, 0.000008983055097726239, -0.78625201886289,
96.32687599759846, -1.85204757529826, -59.36935905485877, 47.40033549296737,
-16.50741931063887, 2.28786674699375, 10260144.86),
c(-3.030883460898826e-8, 0.00000898305509983578, 0.30071316287616,
59.74293618442277, 7.357984074871, -25.38371002664745, 13.45380521110908,
-3.29883767235584, 0.32710905363475, 6856817.37),
c(-1.981981304930552e-8, 0.000008983055099779535, 0.03278182852591, 40.31678527705744,
0.65659298677277, -4.44255534477492, 0.85341911805263, 0.12923347998204,
-0.04625736007561, 4482777.06),
c(3.09191371068437e-9, 0.000008983055096812155, 0.00006995724062, 23.10934304144901,
-0.00023663490511, -0.6321817810242, -0.00663494467273, 0.03430082397953,
-0.00466043876332, 2555164.4),
c(2.890871144776878e-9, 0.000008983055095805407, -3.068298e-8, 7.47137025468032,
-0.00000353937994, -0.02145144861037, -0.00001234426596, 0.00010322952773,
-0.00000323890364, 826088.5))
X_PI <- 3.14159265358979324 * 3000.0 / 180.0
convert_MCT <- function(lon, lat) {
lon <- as.numeric(lon)
lat <- as.numeric(lat)
ax <- NULL
for (j in 1:length(MCBAND)) {
if (lat >= MCBAND[j]) {
ax <- MC2LL[[j]]
break
}
}
if (is.null(ax)) {
stop(paste("error lat:", lat))
}
e <- ax[1] + ax[2] * abs(lon)
i <- abs(lat) / ax[10]
aw <- ax[3] + ax[4] * i + ax[5] * i * i + ax[6] * i * i * i +
ax[7] * i * i * i * i + ax[8] * i * i * i * i * i + ax[9] * i * i * i * i * i * i
if (lon < 0) {
e <- e * -1
}
if (lat < 0) {
aw <- aw * -1
}
return(c(e, aw))
}
convert_MCT(mct$x, mct$y)
get_admin_info <- function(x, y, sleep = 0, full = FALSE) {
location <- stringr::str_c("https://api.map.baidu.com/?qt=rgc&x=", x, "&y=", y, "&dis_poi=100&poi_num=10&latest_admin=1&ie=utf-8&oue=1&fromproduct=jsapi&v=2.1&res=api&callback=BMap._rd._cbk1899&ak=B13d386658b7f5e9c2e2294e0314afbe&seckey=QTgtP7i3IFIyZS1fxcUv7XKwbgK6bqfjAF1bCrqBO20=,0lDw2kcJe7ZlfwPRhV62rwcKzrobqQ7fSyBuUwLq90_0q4g0ZiVMFwng1Clb5yrsPi3gmIjul0Pv5P1JrFKgprNjbBQR0LO-d0wpWW3lDIDx6R8lc9cvB82A_SwsAYToaouwvIzgVHfyytdk7_-lVoNLsAlB97ic29Nu-yNu3ac0RRbClYr4xIBX26-3gH-7UmxiYhe9qXFAVMEhlolRTBpIZbdrertc2CBF7YE5h-4&timeStamp=1683459630021&sign=7ad6dc466104") |>
httr2::request() |>
httr2::req_timeout(5) |>
httr2::req_retry(
max_tries = 3,
backoff = ~ 5
) |>
httr2::req_perform() |>
purrr::pluck("body") |>
rvest::read_html() |>
rvest::html_text() |>
stringr::str_extract("(?<=\\d\\().+?(?=\\)$)") |>
jsonlite::fromJSON() |>
purrr::pluck("content")
Sys.sleep(sleep)
if (full == TRUE) {
return(location)
} else {
info <- list(
district = purrr::pluck(location, "address_detail", "district"),
city = purrr::pluck(location, "address_detail", "city"),
province = purrr::pluck(location, "address_detail", "province")
)
return(info)
}
}
convert_MCT(mct$x, mct$y)
get_admin_info(convert_MCT(mct$x, mct$y)[1], convert_MCT(mct$x, mct$y)[2])
convert_MCT(mct$x, mct$y)[1]
convert_MCT(mct$x, mct$y)[2]
get_admin_info(mct$x, mct$y)
pacman::p_load_gh("xinzhuohkust/Geocoding")
remotes::install_github("xinzhuohkust/Geocoding")
remotes::install_github("xinzhuohkust/Geocoding")
Geocoding::convert_MCT("中南海")
Geocoding::get_MCT("中南海")
mct <- Geocoding::get_MCT("中南海")
Geocoding::convert_MCT(mct$x, mct$y)
list(Geocoding::convert_MCT(mct$x, mct$y))
convert_MCT(mct$x, mct$y)
list(
"longitude" = Geocoding::convert_MCT(mct$x, mct$y)[1],
"latitude" = Geocoding::convert_MCT(mct$x, mct$y)[2]
)
names(mct)
names(mct) <- c("longitude", "atitude")
mct
names(mct) <- c("longitude", "latitude")
mct
mct
Geocoding::get_admin_info(mct[[1], mct[[2]]])
Geocoding::get_admin_info(mct[[1]], mct[[2]])
mct
Geocoding::convert_MCT(mct[[1]], mct[[2]])
2mct <- Geocoding::get_MCT("六安市裕安区")
mct2 <- Geocoding::get_MCT("六安市裕安区")
Geocoding::haversine_distance(Geocoding::convert_MCT(mct[[1]], mct[[2]]， Geocoding::convert_MCT(mct2[[1]], mct2[[2]]))
Geocoding::convert_MCT(mct[[1]], mct[[2]]
Geocoding::convert_MCT(mct[[1]], mct[[2]])
Geocoding::convert_MCT(mct[[1]], mct[[2]])
Geocoding::haversine_distance(Geocoding::convert_MCT(mct[[1]], mct[[2]])， Geocoding::convert_MCT(mct2[[1]], mct2[[2]])))
Geocoding::convert_MCT(mct2[[1]], mct2[[2]]))
Geocoding::convert_MCT(mct2[[1]], mct2[[2]])
Geocoding::haversine_distance(Geocoding::convert_MCT(mct[[1]], mct[[2]])， Geocoding::convert_MCT(mct2[[1]], mct2[[2]]))
Geocoding::haversine_distance(list(Geocoding::convert_MCT(mct[[1]], mct[[2]]))， list(Geocoding::convert_MCT(mct2[[1]], mct2[[2]])))
list(Geocoding::convert_MCT(mct[[1]], mct[[2]]))
remotes::install_github("xinzhuohkust/Geocoding")
Geocoding::get_MCT("六安市裕安区")
get_admin_info(mct[[1]], mct[[2]])
Geocoding::get_admin_info(mct[[1]], mct[[2]])
Geocoding::convert_MCT(mct[[1]], mct[[2]])
Geocoding::convert_MCT(mct[[1]], mct[[2]])
remotes::install_github("xinzhuohkust/Geocoding")
Geocoding::get_MCT("六安市裕安区")
remove.packages(Geocoding)
remove.packages("Geocoding")
Geocoding::get_MCT("六安市裕安区")
remove.packages("Geocoding")
remotes::install_github("xinzhuohkust/Geocoding")
Geocoding::get_MCT("六安市裕安区")
Geocoding::convert_MCT(mct[[1]], mct[[2]])
remotes::install_github("xinzhuohkust/Geocoding")
Geocoding::get_MCT("六安市裕安区")
names(mct) <- c("longitude", "latitude")
names(mct)
mct
